{"version":3,"sources":["components/todo-header.js","components/todo-list-item.js","components/todo-list.js","components/todo-filter-buttons.js","components/todo-form.js","index.js"],"names":["TodoHeader","this","props","more","done","className","React","Component","TodoListItem","text","boldText","important","TodoList","tasks","handleRemoveTask","handleImportantTask","handleToggleDone","length","map","task","key","id","onClick","e","aria-hidden","TodoFilterButtons","handleFilterTask","filter","name","label","btnClass","type","data-filter","TodoForm","handleChangeText","handleSubmitForm","handleSearch","searchText","onSubmit","onChange","placeholder","value","required","App","target","setState","todo","toggleProperty","arr","property","index","findIndex","oldTask","newTask","console","log","slice","tagName","preventDefault","state","byFilter","getAttribute","toLowerCase","indexOf","visibleTasks","filtered","search","doneTask","moreTask","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec2c0b83.chunk.js","sourcesContent":["import  React from 'react';\r\nimport '../index.css';\r\n\r\n\r\nexport default class TodoHeader extends React.Component {\r\n\r\n      render() {\r\n        const { more, done } = this.props;\r\n\r\n        return (\r\n          <div className=\"todo-header\">\r\n            <h1 className='heading'>Заметки</h1>\r\n            <span className=\"more\">{more} незавершенно / {done} завершено</span>\r\n          </div>\r\n        )\r\n      }\r\n\r\n}","import  React from 'react';\r\n\r\n  const TodoListItem = ({ text, important, done }) => {\r\n    const boldText = important ? 'text-important' : '';\r\n    const span = done ? <span className={boldText}><s>{text}</s></span> : <span className={boldText}>{text}</span>;\r\n    return span;\r\n}\r\n\r\nexport default TodoListItem;","import  React from 'react';\r\nimport TodoListItem from './todo-list-item';\r\nimport '../index.css';\r\n\r\nexport default class TodoList extends React.Component {\r\n    \r\n\r\n    render() {\r\n      const { tasks, handleRemoveTask, handleImportantTask, handleToggleDone } = this.props;\r\n      if(tasks.length === 0) {\r\n        return null;\r\n      }\r\n\r\n      return (\r\n        <ul className=\"list\">\r\n          {tasks.map((task) => (\r\n            <li className=\"list-item\" key={task.id}\r\n                id={task.id} \r\n                onClick={(e) => handleToggleDone(e, task.id)}>\r\n                <TodoListItem \r\n                        text={task.text}\r\n                        important={task.important}\r\n                        done={task.done}/>\r\n               <div>\r\n                <button className=\"btn-remove\" onClick={handleRemoveTask(task.id)}>\r\n                      <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                  </button>\r\n                  <button onClick={() => handleImportantTask(task.id)} className={task.important ? 'btn-important important' : 'btn-important'}>\r\n                    <i className=\"fa fa-exclamation\" aria-hidden=\"true\"></i>\r\n                  </button>\r\n               </div>\r\n            </li>))}\r\n        </ul>\r\n      )\r\n    }\r\n\r\n}","import React from 'react';\r\n\r\nconst TodoFilterButtons = ({ handleFilterTask, filter }) => {\r\n   const filters = [\r\n     ['all', 'Все'],\r\n     ['active', 'Активные'],\r\n     ['done', 'Выполненные'],\r\n   ];\r\n\r\n   return filters.map(([ name, label ]) => {\r\n       const btnClass = name === filter ? 'btn btn-filter active-filter' : 'btn btn-filter';\r\n       return (\r\n         <button type=\"button\" onClick={(e) => handleFilterTask(e)} className={btnClass} data-filter={name}>{label}</button>\r\n       )\r\n   })\r\n}\r\n\r\nexport default TodoFilterButtons;","import React from 'react';\r\nimport TodoFilterButtons from './todo-filter-buttons';\r\n\r\nconst TodoForm = ({ text, handleChangeText, handleSubmitForm, handleSearch, searchText, handleFilterTask, filter }) => {\r\n\r\n    \r\n    return (\r\n      <form  className=\"todo-form\" onSubmit={(e) => handleSubmitForm(e)}> \r\n          <div className=\"todo-form-search-bar\">\r\n              <input onChange={(e) => handleSearch(e)} placeholder=\"Поиск...\" className=\"input-search\" value={searchText} type=\"search\"/>\r\n              <div className=\"todo-form-filter\">\r\n                  <TodoFilterButtons handleFilterTask={handleFilterTask} filter={filter}/>\r\n              </div>\r\n          </div>\r\n          <div className=\"todo-form-add\">\r\n              <input className=\"input-text\" placeholder=\"Введите вашу заметку...\" required value={text} onChange={(e) => handleChangeText(e)} />\r\n              <button className=\"btn btn-add\" type=\"submit\">Добавить</button>\r\n          </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm;","import  React from 'react';\r\nimport  ReactDOM from 'react-dom';\r\nimport TodoHeader from './components/todo-header';\r\nimport TodoList from './components/todo-list';\r\nimport TodoForm from './components/todo-form';\r\n\r\nclass App extends React.Component {\r\n    \r\n    id = 1;\r\n    \r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          todo: [],\r\n          text: '',\r\n          searchText: '',\r\n          filter: 'all',\r\n      };\r\n    }\r\n\r\n    handleChangeText = ({ target: { value } }) => {\r\n       this.setState({\r\n         text: value,\r\n       })\r\n    }\r\n\r\n    handleRemoveTask = (id) => () => {\r\n       this.setState(({ todo }) => {\r\n          const newTodo = todo.filter((task) => task.id !== id);\r\n\r\n          return {\r\n            todo: newTodo,\r\n          }\r\n\r\n       })\r\n    }\r\n\r\n    toggleProperty = (arr, id, property) => {\r\n       const index = arr.findIndex((task) => task.id === id);\r\n       const oldTask = arr[index];\r\n       const newTask = { ...oldTask, [property]: !oldTask[property]};\r\n       console.log(newTask);\r\n       return [\r\n         ...arr.slice(0, index),\r\n         newTask,\r\n         ...arr.slice(index + 1),\r\n       ];\r\n    }\r\n\r\n   handleImportantTask = (id) => {\r\n       this.setState(({ todo }) => {\r\n          return {\r\n            todo: this.toggleProperty(todo, id, 'important'),\r\n          }\r\n       })\r\n   }\r\n\r\n   handleToggleDone = ({ target: { tagName } }, id) => {\r\n    if(tagName !== 'LI') {\r\n      return;\r\n    }\r\n\r\n    this.setState(({ todo }) => {\r\n      return {\r\n        todo: this.toggleProperty(todo, id, 'done'),\r\n      }\r\n   });\r\n\r\n   }\r\n   \r\n   handleSearch = ({ target: { value } }) => {\r\n     this.setState({\r\n       searchText: value,\r\n     })\r\n }\r\n   \r\n\r\n    handleSubmitForm = (e) => {\r\n      e.preventDefault();\r\n      const { text } = this.state;\r\n      if(text === '') {\r\n        return;\r\n      }\r\n      \r\n      const task = { \r\n         id: this.id++,\r\n         text: text,\r\n         done: false,\r\n         important: false,\r\n      }\r\n\r\n      this.setState(({ todo }) => {\r\n          const newTodo = [task, ...todo];\r\n\r\n          return {\r\n            todo:  newTodo,\r\n            text: '',\r\n          }\r\n      })\r\n    }\r\n\r\n    filtered(arr, filter) {\r\n      \r\n      switch(filter) {\r\n        case 'all' : {\r\n          return arr;\r\n        }\r\n        case 'done' : {\r\n          return arr.filter((task) => task.done);\r\n        }\r\n        case 'active' : {\r\n          return  arr.filter((task) => !task.done);\r\n        }\r\n        default: {\r\n          return arr;\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    handleFilterTask = (e) => {\r\n      const byFilter = e.target.getAttribute('data-filter');\r\n      this.setState({\r\n        filter: byFilter,\r\n      })\r\n    }\r\n\r\n    search(todo, searchText) {\r\n        if(searchText.length === 0) {\r\n          return todo;\r\n        }\r\n\r\n        return todo.filter((task) => {\r\n          return task.text\r\n                 .toLowerCase().indexOf(searchText.toLowerCase()) > -1;\r\n        })\r\n    }\r\n\r\n    render() {\r\n      const { text, todo, searchText, filter } = this.state;\r\n      const visibleTasks = this.filtered(this.search(todo, searchText), filter);\r\n\r\n      const doneTask = todo.filter((task) => task.done).length;\r\n      const moreTask = todo.length - doneTask;\r\n\r\n      return (\r\n        <div className='todo-container'>\r\n          <TodoHeader \r\n              more={moreTask}\r\n              done={doneTask}/>\r\n          <TodoForm  text={text}\r\n                     searchText={searchText}\r\n                     handleChangeText={this.handleChangeText}\r\n                     handleSubmitForm={this.handleSubmitForm}\r\n                     handleSearch={this.handleSearch}\r\n                     handleFilterTask={this.handleFilterTask}\r\n                     filter={filter} />\r\n          <TodoList tasks={visibleTasks}\r\n                    handleRemoveTask={this.handleRemoveTask}\r\n                    handleImportantTask={this.handleImportantTask}\r\n                    handleToggleDone={this.handleToggleDone}/>\r\n        </div>\r\n      )\r\n    }\r\n\r\n}\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}